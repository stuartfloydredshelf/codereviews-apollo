import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import { AcceptInboundCrossClusterSearchConnectionCommandInput, AcceptInboundCrossClusterSearchConnectionCommandOutput } from "./commands/AcceptInboundCrossClusterSearchConnectionCommand";
import { AddTagsCommandInput, AddTagsCommandOutput } from "./commands/AddTagsCommand";
import { AssociatePackageCommandInput, AssociatePackageCommandOutput } from "./commands/AssociatePackageCommand";
import { CancelElasticsearchServiceSoftwareUpdateCommandInput, CancelElasticsearchServiceSoftwareUpdateCommandOutput } from "./commands/CancelElasticsearchServiceSoftwareUpdateCommand";
import { CreateElasticsearchDomainCommandInput, CreateElasticsearchDomainCommandOutput } from "./commands/CreateElasticsearchDomainCommand";
import { CreateOutboundCrossClusterSearchConnectionCommandInput, CreateOutboundCrossClusterSearchConnectionCommandOutput } from "./commands/CreateOutboundCrossClusterSearchConnectionCommand";
import { CreatePackageCommandInput, CreatePackageCommandOutput } from "./commands/CreatePackageCommand";
import { DeleteElasticsearchDomainCommandInput, DeleteElasticsearchDomainCommandOutput } from "./commands/DeleteElasticsearchDomainCommand";
import { DeleteElasticsearchServiceRoleCommandInput, DeleteElasticsearchServiceRoleCommandOutput } from "./commands/DeleteElasticsearchServiceRoleCommand";
import { DeleteInboundCrossClusterSearchConnectionCommandInput, DeleteInboundCrossClusterSearchConnectionCommandOutput } from "./commands/DeleteInboundCrossClusterSearchConnectionCommand";
import { DeleteOutboundCrossClusterSearchConnectionCommandInput, DeleteOutboundCrossClusterSearchConnectionCommandOutput } from "./commands/DeleteOutboundCrossClusterSearchConnectionCommand";
import { DeletePackageCommandInput, DeletePackageCommandOutput } from "./commands/DeletePackageCommand";
import { DescribeDomainAutoTunesCommandInput, DescribeDomainAutoTunesCommandOutput } from "./commands/DescribeDomainAutoTunesCommand";
import { DescribeElasticsearchDomainCommandInput, DescribeElasticsearchDomainCommandOutput } from "./commands/DescribeElasticsearchDomainCommand";
import { DescribeElasticsearchDomainConfigCommandInput, DescribeElasticsearchDomainConfigCommandOutput } from "./commands/DescribeElasticsearchDomainConfigCommand";
import { DescribeElasticsearchDomainsCommandInput, DescribeElasticsearchDomainsCommandOutput } from "./commands/DescribeElasticsearchDomainsCommand";
import { DescribeElasticsearchInstanceTypeLimitsCommandInput, DescribeElasticsearchInstanceTypeLimitsCommandOutput } from "./commands/DescribeElasticsearchInstanceTypeLimitsCommand";
import { DescribeInboundCrossClusterSearchConnectionsCommandInput, DescribeInboundCrossClusterSearchConnectionsCommandOutput } from "./commands/DescribeInboundCrossClusterSearchConnectionsCommand";
import { DescribeOutboundCrossClusterSearchConnectionsCommandInput, DescribeOutboundCrossClusterSearchConnectionsCommandOutput } from "./commands/DescribeOutboundCrossClusterSearchConnectionsCommand";
import { DescribePackagesCommandInput, DescribePackagesCommandOutput } from "./commands/DescribePackagesCommand";
import { DescribeReservedElasticsearchInstanceOfferingsCommandInput, DescribeReservedElasticsearchInstanceOfferingsCommandOutput } from "./commands/DescribeReservedElasticsearchInstanceOfferingsCommand";
import { DescribeReservedElasticsearchInstancesCommandInput, DescribeReservedElasticsearchInstancesCommandOutput } from "./commands/DescribeReservedElasticsearchInstancesCommand";
import { DissociatePackageCommandInput, DissociatePackageCommandOutput } from "./commands/DissociatePackageCommand";
import { GetCompatibleElasticsearchVersionsCommandInput, GetCompatibleElasticsearchVersionsCommandOutput } from "./commands/GetCompatibleElasticsearchVersionsCommand";
import { GetPackageVersionHistoryCommandInput, GetPackageVersionHistoryCommandOutput } from "./commands/GetPackageVersionHistoryCommand";
import { GetUpgradeHistoryCommandInput, GetUpgradeHistoryCommandOutput } from "./commands/GetUpgradeHistoryCommand";
import { GetUpgradeStatusCommandInput, GetUpgradeStatusCommandOutput } from "./commands/GetUpgradeStatusCommand";
import { ListDomainNamesCommandInput, ListDomainNamesCommandOutput } from "./commands/ListDomainNamesCommand";
import { ListDomainsForPackageCommandInput, ListDomainsForPackageCommandOutput } from "./commands/ListDomainsForPackageCommand";
import { ListElasticsearchInstanceTypesCommandInput, ListElasticsearchInstanceTypesCommandOutput } from "./commands/ListElasticsearchInstanceTypesCommand";
import { ListElasticsearchVersionsCommandInput, ListElasticsearchVersionsCommandOutput } from "./commands/ListElasticsearchVersionsCommand";
import { ListPackagesForDomainCommandInput, ListPackagesForDomainCommandOutput } from "./commands/ListPackagesForDomainCommand";
import { ListTagsCommandInput, ListTagsCommandOutput } from "./commands/ListTagsCommand";
import { PurchaseReservedElasticsearchInstanceOfferingCommandInput, PurchaseReservedElasticsearchInstanceOfferingCommandOutput } from "./commands/PurchaseReservedElasticsearchInstanceOfferingCommand";
import { RejectInboundCrossClusterSearchConnectionCommandInput, RejectInboundCrossClusterSearchConnectionCommandOutput } from "./commands/RejectInboundCrossClusterSearchConnectionCommand";
import { RemoveTagsCommandInput, RemoveTagsCommandOutput } from "./commands/RemoveTagsCommand";
import { StartElasticsearchServiceSoftwareUpdateCommandInput, StartElasticsearchServiceSoftwareUpdateCommandOutput } from "./commands/StartElasticsearchServiceSoftwareUpdateCommand";
import { UpdateElasticsearchDomainConfigCommandInput, UpdateElasticsearchDomainConfigCommandOutput } from "./commands/UpdateElasticsearchDomainConfigCommand";
import { UpdatePackageCommandInput, UpdatePackageCommandOutput } from "./commands/UpdatePackageCommand";
import { UpgradeElasticsearchDomainCommandInput, UpgradeElasticsearchDomainCommandOutput } from "./commands/UpgradeElasticsearchDomainCommand";
import { ElasticsearchServiceClient } from "./ElasticsearchServiceClient";

export declare class ElasticsearchService extends ElasticsearchServiceClient {
    
    acceptInboundCrossClusterSearchConnection(args: AcceptInboundCrossClusterSearchConnectionCommandInput, options?: __HttpHandlerOptions): Promise<AcceptInboundCrossClusterSearchConnectionCommandOutput>;
    acceptInboundCrossClusterSearchConnection(args: AcceptInboundCrossClusterSearchConnectionCommandInput, cb: (err: any, data?: AcceptInboundCrossClusterSearchConnectionCommandOutput) => void): void;
    acceptInboundCrossClusterSearchConnection(args: AcceptInboundCrossClusterSearchConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AcceptInboundCrossClusterSearchConnectionCommandOutput) => void): void;
    
    addTags(args: AddTagsCommandInput, options?: __HttpHandlerOptions): Promise<AddTagsCommandOutput>;
    addTags(args: AddTagsCommandInput, cb: (err: any, data?: AddTagsCommandOutput) => void): void;
    addTags(args: AddTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AddTagsCommandOutput) => void): void;
    
    associatePackage(args: AssociatePackageCommandInput, options?: __HttpHandlerOptions): Promise<AssociatePackageCommandOutput>;
    associatePackage(args: AssociatePackageCommandInput, cb: (err: any, data?: AssociatePackageCommandOutput) => void): void;
    associatePackage(args: AssociatePackageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociatePackageCommandOutput) => void): void;
    
    cancelElasticsearchServiceSoftwareUpdate(args: CancelElasticsearchServiceSoftwareUpdateCommandInput, options?: __HttpHandlerOptions): Promise<CancelElasticsearchServiceSoftwareUpdateCommandOutput>;
    cancelElasticsearchServiceSoftwareUpdate(args: CancelElasticsearchServiceSoftwareUpdateCommandInput, cb: (err: any, data?: CancelElasticsearchServiceSoftwareUpdateCommandOutput) => void): void;
    cancelElasticsearchServiceSoftwareUpdate(args: CancelElasticsearchServiceSoftwareUpdateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CancelElasticsearchServiceSoftwareUpdateCommandOutput) => void): void;
    
    createElasticsearchDomain(args: CreateElasticsearchDomainCommandInput, options?: __HttpHandlerOptions): Promise<CreateElasticsearchDomainCommandOutput>;
    createElasticsearchDomain(args: CreateElasticsearchDomainCommandInput, cb: (err: any, data?: CreateElasticsearchDomainCommandOutput) => void): void;
    createElasticsearchDomain(args: CreateElasticsearchDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateElasticsearchDomainCommandOutput) => void): void;
    
    createOutboundCrossClusterSearchConnection(args: CreateOutboundCrossClusterSearchConnectionCommandInput, options?: __HttpHandlerOptions): Promise<CreateOutboundCrossClusterSearchConnectionCommandOutput>;
    createOutboundCrossClusterSearchConnection(args: CreateOutboundCrossClusterSearchConnectionCommandInput, cb: (err: any, data?: CreateOutboundCrossClusterSearchConnectionCommandOutput) => void): void;
    createOutboundCrossClusterSearchConnection(args: CreateOutboundCrossClusterSearchConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateOutboundCrossClusterSearchConnectionCommandOutput) => void): void;
    
    createPackage(args: CreatePackageCommandInput, options?: __HttpHandlerOptions): Promise<CreatePackageCommandOutput>;
    createPackage(args: CreatePackageCommandInput, cb: (err: any, data?: CreatePackageCommandOutput) => void): void;
    createPackage(args: CreatePackageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreatePackageCommandOutput) => void): void;
    
    deleteElasticsearchDomain(args: DeleteElasticsearchDomainCommandInput, options?: __HttpHandlerOptions): Promise<DeleteElasticsearchDomainCommandOutput>;
    deleteElasticsearchDomain(args: DeleteElasticsearchDomainCommandInput, cb: (err: any, data?: DeleteElasticsearchDomainCommandOutput) => void): void;
    deleteElasticsearchDomain(args: DeleteElasticsearchDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteElasticsearchDomainCommandOutput) => void): void;
    
    deleteElasticsearchServiceRole(args: DeleteElasticsearchServiceRoleCommandInput, options?: __HttpHandlerOptions): Promise<DeleteElasticsearchServiceRoleCommandOutput>;
    deleteElasticsearchServiceRole(args: DeleteElasticsearchServiceRoleCommandInput, cb: (err: any, data?: DeleteElasticsearchServiceRoleCommandOutput) => void): void;
    deleteElasticsearchServiceRole(args: DeleteElasticsearchServiceRoleCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteElasticsearchServiceRoleCommandOutput) => void): void;
    
    deleteInboundCrossClusterSearchConnection(args: DeleteInboundCrossClusterSearchConnectionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteInboundCrossClusterSearchConnectionCommandOutput>;
    deleteInboundCrossClusterSearchConnection(args: DeleteInboundCrossClusterSearchConnectionCommandInput, cb: (err: any, data?: DeleteInboundCrossClusterSearchConnectionCommandOutput) => void): void;
    deleteInboundCrossClusterSearchConnection(args: DeleteInboundCrossClusterSearchConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteInboundCrossClusterSearchConnectionCommandOutput) => void): void;
    
    deleteOutboundCrossClusterSearchConnection(args: DeleteOutboundCrossClusterSearchConnectionCommandInput, options?: __HttpHandlerOptions): Promise<DeleteOutboundCrossClusterSearchConnectionCommandOutput>;
    deleteOutboundCrossClusterSearchConnection(args: DeleteOutboundCrossClusterSearchConnectionCommandInput, cb: (err: any, data?: DeleteOutboundCrossClusterSearchConnectionCommandOutput) => void): void;
    deleteOutboundCrossClusterSearchConnection(args: DeleteOutboundCrossClusterSearchConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteOutboundCrossClusterSearchConnectionCommandOutput) => void): void;
    
    deletePackage(args: DeletePackageCommandInput, options?: __HttpHandlerOptions): Promise<DeletePackageCommandOutput>;
    deletePackage(args: DeletePackageCommandInput, cb: (err: any, data?: DeletePackageCommandOutput) => void): void;
    deletePackage(args: DeletePackageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeletePackageCommandOutput) => void): void;
    
    describeDomainAutoTunes(args: DescribeDomainAutoTunesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDomainAutoTunesCommandOutput>;
    describeDomainAutoTunes(args: DescribeDomainAutoTunesCommandInput, cb: (err: any, data?: DescribeDomainAutoTunesCommandOutput) => void): void;
    describeDomainAutoTunes(args: DescribeDomainAutoTunesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDomainAutoTunesCommandOutput) => void): void;
    
    describeElasticsearchDomain(args: DescribeElasticsearchDomainCommandInput, options?: __HttpHandlerOptions): Promise<DescribeElasticsearchDomainCommandOutput>;
    describeElasticsearchDomain(args: DescribeElasticsearchDomainCommandInput, cb: (err: any, data?: DescribeElasticsearchDomainCommandOutput) => void): void;
    describeElasticsearchDomain(args: DescribeElasticsearchDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeElasticsearchDomainCommandOutput) => void): void;
    
    describeElasticsearchDomainConfig(args: DescribeElasticsearchDomainConfigCommandInput, options?: __HttpHandlerOptions): Promise<DescribeElasticsearchDomainConfigCommandOutput>;
    describeElasticsearchDomainConfig(args: DescribeElasticsearchDomainConfigCommandInput, cb: (err: any, data?: DescribeElasticsearchDomainConfigCommandOutput) => void): void;
    describeElasticsearchDomainConfig(args: DescribeElasticsearchDomainConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeElasticsearchDomainConfigCommandOutput) => void): void;
    
    describeElasticsearchDomains(args: DescribeElasticsearchDomainsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeElasticsearchDomainsCommandOutput>;
    describeElasticsearchDomains(args: DescribeElasticsearchDomainsCommandInput, cb: (err: any, data?: DescribeElasticsearchDomainsCommandOutput) => void): void;
    describeElasticsearchDomains(args: DescribeElasticsearchDomainsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeElasticsearchDomainsCommandOutput) => void): void;
    
    describeElasticsearchInstanceTypeLimits(args: DescribeElasticsearchInstanceTypeLimitsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeElasticsearchInstanceTypeLimitsCommandOutput>;
    describeElasticsearchInstanceTypeLimits(args: DescribeElasticsearchInstanceTypeLimitsCommandInput, cb: (err: any, data?: DescribeElasticsearchInstanceTypeLimitsCommandOutput) => void): void;
    describeElasticsearchInstanceTypeLimits(args: DescribeElasticsearchInstanceTypeLimitsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeElasticsearchInstanceTypeLimitsCommandOutput) => void): void;
    
    describeInboundCrossClusterSearchConnections(args: DescribeInboundCrossClusterSearchConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeInboundCrossClusterSearchConnectionsCommandOutput>;
    describeInboundCrossClusterSearchConnections(args: DescribeInboundCrossClusterSearchConnectionsCommandInput, cb: (err: any, data?: DescribeInboundCrossClusterSearchConnectionsCommandOutput) => void): void;
    describeInboundCrossClusterSearchConnections(args: DescribeInboundCrossClusterSearchConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeInboundCrossClusterSearchConnectionsCommandOutput) => void): void;
    
    describeOutboundCrossClusterSearchConnections(args: DescribeOutboundCrossClusterSearchConnectionsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeOutboundCrossClusterSearchConnectionsCommandOutput>;
    describeOutboundCrossClusterSearchConnections(args: DescribeOutboundCrossClusterSearchConnectionsCommandInput, cb: (err: any, data?: DescribeOutboundCrossClusterSearchConnectionsCommandOutput) => void): void;
    describeOutboundCrossClusterSearchConnections(args: DescribeOutboundCrossClusterSearchConnectionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeOutboundCrossClusterSearchConnectionsCommandOutput) => void): void;
    
    describePackages(args: DescribePackagesCommandInput, options?: __HttpHandlerOptions): Promise<DescribePackagesCommandOutput>;
    describePackages(args: DescribePackagesCommandInput, cb: (err: any, data?: DescribePackagesCommandOutput) => void): void;
    describePackages(args: DescribePackagesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePackagesCommandOutput) => void): void;
    
    describeReservedElasticsearchInstanceOfferings(args: DescribeReservedElasticsearchInstanceOfferingsCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReservedElasticsearchInstanceOfferingsCommandOutput>;
    describeReservedElasticsearchInstanceOfferings(args: DescribeReservedElasticsearchInstanceOfferingsCommandInput, cb: (err: any, data?: DescribeReservedElasticsearchInstanceOfferingsCommandOutput) => void): void;
    describeReservedElasticsearchInstanceOfferings(args: DescribeReservedElasticsearchInstanceOfferingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReservedElasticsearchInstanceOfferingsCommandOutput) => void): void;
    
    describeReservedElasticsearchInstances(args: DescribeReservedElasticsearchInstancesCommandInput, options?: __HttpHandlerOptions): Promise<DescribeReservedElasticsearchInstancesCommandOutput>;
    describeReservedElasticsearchInstances(args: DescribeReservedElasticsearchInstancesCommandInput, cb: (err: any, data?: DescribeReservedElasticsearchInstancesCommandOutput) => void): void;
    describeReservedElasticsearchInstances(args: DescribeReservedElasticsearchInstancesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeReservedElasticsearchInstancesCommandOutput) => void): void;
    
    dissociatePackage(args: DissociatePackageCommandInput, options?: __HttpHandlerOptions): Promise<DissociatePackageCommandOutput>;
    dissociatePackage(args: DissociatePackageCommandInput, cb: (err: any, data?: DissociatePackageCommandOutput) => void): void;
    dissociatePackage(args: DissociatePackageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DissociatePackageCommandOutput) => void): void;
    
    getCompatibleElasticsearchVersions(args: GetCompatibleElasticsearchVersionsCommandInput, options?: __HttpHandlerOptions): Promise<GetCompatibleElasticsearchVersionsCommandOutput>;
    getCompatibleElasticsearchVersions(args: GetCompatibleElasticsearchVersionsCommandInput, cb: (err: any, data?: GetCompatibleElasticsearchVersionsCommandOutput) => void): void;
    getCompatibleElasticsearchVersions(args: GetCompatibleElasticsearchVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetCompatibleElasticsearchVersionsCommandOutput) => void): void;
    
    getPackageVersionHistory(args: GetPackageVersionHistoryCommandInput, options?: __HttpHandlerOptions): Promise<GetPackageVersionHistoryCommandOutput>;
    getPackageVersionHistory(args: GetPackageVersionHistoryCommandInput, cb: (err: any, data?: GetPackageVersionHistoryCommandOutput) => void): void;
    getPackageVersionHistory(args: GetPackageVersionHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetPackageVersionHistoryCommandOutput) => void): void;
    
    getUpgradeHistory(args: GetUpgradeHistoryCommandInput, options?: __HttpHandlerOptions): Promise<GetUpgradeHistoryCommandOutput>;
    getUpgradeHistory(args: GetUpgradeHistoryCommandInput, cb: (err: any, data?: GetUpgradeHistoryCommandOutput) => void): void;
    getUpgradeHistory(args: GetUpgradeHistoryCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetUpgradeHistoryCommandOutput) => void): void;
    
    getUpgradeStatus(args: GetUpgradeStatusCommandInput, options?: __HttpHandlerOptions): Promise<GetUpgradeStatusCommandOutput>;
    getUpgradeStatus(args: GetUpgradeStatusCommandInput, cb: (err: any, data?: GetUpgradeStatusCommandOutput) => void): void;
    getUpgradeStatus(args: GetUpgradeStatusCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetUpgradeStatusCommandOutput) => void): void;
    
    listDomainNames(args: ListDomainNamesCommandInput, options?: __HttpHandlerOptions): Promise<ListDomainNamesCommandOutput>;
    listDomainNames(args: ListDomainNamesCommandInput, cb: (err: any, data?: ListDomainNamesCommandOutput) => void): void;
    listDomainNames(args: ListDomainNamesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDomainNamesCommandOutput) => void): void;
    
    listDomainsForPackage(args: ListDomainsForPackageCommandInput, options?: __HttpHandlerOptions): Promise<ListDomainsForPackageCommandOutput>;
    listDomainsForPackage(args: ListDomainsForPackageCommandInput, cb: (err: any, data?: ListDomainsForPackageCommandOutput) => void): void;
    listDomainsForPackage(args: ListDomainsForPackageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDomainsForPackageCommandOutput) => void): void;
    
    listElasticsearchInstanceTypes(args: ListElasticsearchInstanceTypesCommandInput, options?: __HttpHandlerOptions): Promise<ListElasticsearchInstanceTypesCommandOutput>;
    listElasticsearchInstanceTypes(args: ListElasticsearchInstanceTypesCommandInput, cb: (err: any, data?: ListElasticsearchInstanceTypesCommandOutput) => void): void;
    listElasticsearchInstanceTypes(args: ListElasticsearchInstanceTypesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListElasticsearchInstanceTypesCommandOutput) => void): void;
    
    listElasticsearchVersions(args: ListElasticsearchVersionsCommandInput, options?: __HttpHandlerOptions): Promise<ListElasticsearchVersionsCommandOutput>;
    listElasticsearchVersions(args: ListElasticsearchVersionsCommandInput, cb: (err: any, data?: ListElasticsearchVersionsCommandOutput) => void): void;
    listElasticsearchVersions(args: ListElasticsearchVersionsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListElasticsearchVersionsCommandOutput) => void): void;
    
    listPackagesForDomain(args: ListPackagesForDomainCommandInput, options?: __HttpHandlerOptions): Promise<ListPackagesForDomainCommandOutput>;
    listPackagesForDomain(args: ListPackagesForDomainCommandInput, cb: (err: any, data?: ListPackagesForDomainCommandOutput) => void): void;
    listPackagesForDomain(args: ListPackagesForDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPackagesForDomainCommandOutput) => void): void;
    
    listTags(args: ListTagsCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsCommandOutput>;
    listTags(args: ListTagsCommandInput, cb: (err: any, data?: ListTagsCommandOutput) => void): void;
    listTags(args: ListTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsCommandOutput) => void): void;
    
    purchaseReservedElasticsearchInstanceOffering(args: PurchaseReservedElasticsearchInstanceOfferingCommandInput, options?: __HttpHandlerOptions): Promise<PurchaseReservedElasticsearchInstanceOfferingCommandOutput>;
    purchaseReservedElasticsearchInstanceOffering(args: PurchaseReservedElasticsearchInstanceOfferingCommandInput, cb: (err: any, data?: PurchaseReservedElasticsearchInstanceOfferingCommandOutput) => void): void;
    purchaseReservedElasticsearchInstanceOffering(args: PurchaseReservedElasticsearchInstanceOfferingCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: PurchaseReservedElasticsearchInstanceOfferingCommandOutput) => void): void;
    
    rejectInboundCrossClusterSearchConnection(args: RejectInboundCrossClusterSearchConnectionCommandInput, options?: __HttpHandlerOptions): Promise<RejectInboundCrossClusterSearchConnectionCommandOutput>;
    rejectInboundCrossClusterSearchConnection(args: RejectInboundCrossClusterSearchConnectionCommandInput, cb: (err: any, data?: RejectInboundCrossClusterSearchConnectionCommandOutput) => void): void;
    rejectInboundCrossClusterSearchConnection(args: RejectInboundCrossClusterSearchConnectionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RejectInboundCrossClusterSearchConnectionCommandOutput) => void): void;
    
    removeTags(args: RemoveTagsCommandInput, options?: __HttpHandlerOptions): Promise<RemoveTagsCommandOutput>;
    removeTags(args: RemoveTagsCommandInput, cb: (err: any, data?: RemoveTagsCommandOutput) => void): void;
    removeTags(args: RemoveTagsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: RemoveTagsCommandOutput) => void): void;
    
    startElasticsearchServiceSoftwareUpdate(args: StartElasticsearchServiceSoftwareUpdateCommandInput, options?: __HttpHandlerOptions): Promise<StartElasticsearchServiceSoftwareUpdateCommandOutput>;
    startElasticsearchServiceSoftwareUpdate(args: StartElasticsearchServiceSoftwareUpdateCommandInput, cb: (err: any, data?: StartElasticsearchServiceSoftwareUpdateCommandOutput) => void): void;
    startElasticsearchServiceSoftwareUpdate(args: StartElasticsearchServiceSoftwareUpdateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartElasticsearchServiceSoftwareUpdateCommandOutput) => void): void;
    
    updateElasticsearchDomainConfig(args: UpdateElasticsearchDomainConfigCommandInput, options?: __HttpHandlerOptions): Promise<UpdateElasticsearchDomainConfigCommandOutput>;
    updateElasticsearchDomainConfig(args: UpdateElasticsearchDomainConfigCommandInput, cb: (err: any, data?: UpdateElasticsearchDomainConfigCommandOutput) => void): void;
    updateElasticsearchDomainConfig(args: UpdateElasticsearchDomainConfigCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateElasticsearchDomainConfigCommandOutput) => void): void;
    
    updatePackage(args: UpdatePackageCommandInput, options?: __HttpHandlerOptions): Promise<UpdatePackageCommandOutput>;
    updatePackage(args: UpdatePackageCommandInput, cb: (err: any, data?: UpdatePackageCommandOutput) => void): void;
    updatePackage(args: UpdatePackageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdatePackageCommandOutput) => void): void;
    
    upgradeElasticsearchDomain(args: UpgradeElasticsearchDomainCommandInput, options?: __HttpHandlerOptions): Promise<UpgradeElasticsearchDomainCommandOutput>;
    upgradeElasticsearchDomain(args: UpgradeElasticsearchDomainCommandInput, cb: (err: any, data?: UpgradeElasticsearchDomainCommandOutput) => void): void;
    upgradeElasticsearchDomain(args: UpgradeElasticsearchDomainCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpgradeElasticsearchDomainCommandOutput) => void): void;
}
